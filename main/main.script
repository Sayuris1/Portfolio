local camera = require "orthographic.camera"

function init(self)
    self.cursor_hashes = {[hash("/start")] = "start()"}

    msg.post(".", "acquire_input_focus")

	-- Parallax variables
    self.camera_id = go.get_id("/camera")
    self.pos_camera = go.get_position(self.camera_id)    

    if html5.run("(typeof window.orientation !== 'undefined') ||(navigator.userAgent.indexOf('IEMobile') !== -1);") == "false" then
        go.set_scale(vmath.vector3(0.08), "/player")
        sprite.play_flipbook("/go#sprite", "mouse_click")
    end
end

function update(self, dt)
	-- Set cloud shader constants
    self.pos_camera = go.get_position(self.camera_id)
    local pos = self.pos_camera / 1000
    go.set("/star#quad", "u_in", vmath.vector4(pos.x, pos.y, 0, 0))
end

function on_input(self, action_id, action)
    if can_input then
        -- Feed input to the cursor object
        local world = camera.screen_to_world(nil, vmath.vector3(action.x, action.y, 0))
        action.x = world.x; action.y = world.y
        msg.post("#cursor", "input", { action_id = action_id, action = action })

        if action_id == hash("profiler") and action.pressed then
            self.profiler = not self.profiler
            profiler.enable_ui(self.profiler)
        end
    end
end