local camera = require "orthographic.camera"

local TOUCH = hash("touch")
local DASH = hash("dash")

local TRIGGER = hash("trigger_response")

function init(self)
	msg.post(".", "acquire_input_focus")

    go.property("speed", 500)
    go.property("max_speed", 200)

    -- Cloud variables
    self.time = 0

    -- Parallax variables
    self.camera_id = go.get_id("/camera")
    self.pos_camera = go.get_position(self.camera_id)    

    -- Movement variables
    self.pos_current = go.get_position()
    self.steering = vmath.vector3(0)

    self.dash = 1

    -- Rotate
    self.pos_mouse = vmath.vector3(0)
end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function update(self, dt)
    -- Kinematic movement
    local dir = self.steering * self.speed * self.dash * dt
    self.pos_current = self.pos_current + dir
    self.pos_mouse = self.pos_mouse + dir
    go.set_position(self.pos_current)

    -- Reset steering to stop moving after mouse release
    self.steering.x = 0; self.steering.y = 0

    -- Rotate to mouse
    local rotate_angle = math.atan2(self.pos_mouse.x - self.pos_current.x, self.pos_mouse.y - self.pos_current.y)
    go.set_rotation(vmath.quat_rotation_z(-rotate_angle))

    -- Parallax
    self.pos_camera = go.get_position(self.camera_id)
    go.set_position(self.pos_camera / 2, "/parallax_3")
    go.set_position(self.pos_camera / 3, "/parallax_2")
    go.set_position(self.pos_camera / 6, "/parallax_1")

    -- Cloud
    go.set_position(self.pos_camera, "/cloud")

    local pos = self.pos_camera / 1000
    go.set("/cloud#quat", "u_in", vmath.vector4(pos.x, pos.y, 0, 0))
end

function on_message(self, message_id, message, sender)
	if message_id == TRIGGER and message.enter then
        local other_id = message.other_id
        local duration = math.random() + 5
        local pos_particle = go.get_position(other_id)
        local to = pos_particle + (pos_particle - self.pos_current) * (math.random(20) + math.random())
        to.z = pos_particle.z
        go.animate(other_id, "position", go.PLAYBACK_ONCE_PINGPONG, to, go.EASING_OUTQUAD, duration)
    end
end

function on_input(self, action_id, action)
	if action_id == TOUCH then
        local world = camera.screen_to_world(nil, vmath.vector3(action.x, action.y, 0))
        local distance = world - self.pos_current

        if vmath.length_sqr(distance) > 500 then
            self.steering = vmath.normalize(distance)
        end

    elseif action_id == DASH then
        if action.pressed then
            self.dash = 2
        elseif action.released then
            self.dash = 1
        end

    -- Mouse movement have action_id == nil
    else
        self.pos_mouse = camera.screen_to_world(nil, vmath.vector3(action.x, action.y, 0))
    end
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
